% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summary-mass_dataset.R, R/tibble_add_column.R
\docType{methods}
\name{get_sample_number}
\alias{get_sample_number}
\alias{get_variable_number}
\alias{get_sample_id}
\alias{get_variable_id}
\alias{get_mv_number}
\alias{dim.mass_dataset}
\alias{nrow.mass_dataset}
\alias{ncol.mass_dataset}
\alias{colnames.mass_dataset}
\alias{rownames.mass_dataset}
\alias{apply,mass_dataset-method}
\alias{intersect,mass_dataset,mass_dataset-method}
\alias{summary.mass_dataset}
\alias{length.mass_dataset}
\alias{names.mass_dataset}
\alias{dimnames.mass_dataset}
\alias{is.na.mass_dataset}
\alias{add_column,mass_dataset-method}
\title{get_sample_number}
\usage{
get_sample_number(object)

get_variable_number(object)

get_sample_id(object)

get_variable_id(object)

get_mv_number(
  object,
  by = c("total", "sample", "variable"),
  show_by = c("number", "percentage")
)

\method{dim}{mass_dataset}(x)

\method{nrow}{mass_dataset}(x)

\method{ncol}{mass_dataset}(x)

\method{colnames}{mass_dataset}(x)

\method{rownames}{mass_dataset}(x)

\S4method{apply}{mass_dataset}(X, MARGIN, FUN, ..., simplify = TRUE)

\S4method{intersect}{mass_dataset,mass_dataset}(x, y)

\method{summary}{mass_dataset}(object, ...)

\method{length}{mass_dataset}(x)

\method{names}{mass_dataset}(x)

\method{dimnames}{mass_dataset}(x)

\method{is.na}{mass_dataset}(x)

\S4method{add_column}{mass_dataset}(
  .data,
  ...,
  .before = NULL,
  .after = NULL,
  .name_repair = c("check_unique", "unique", "universal", "minimal")
)
}
\arguments{
\item{object}{object}

\item{by}{total: Missing value number in total. sample: Missing value number in each sample.
variable: Missing value number in each variable.}

\item{show_by}{number: missing value number. percentage: missing value percentage.}

\item{x}{x}

\item{X}{X}

\item{MARGIN}{MARGIN}

\item{FUN}{FUN}

\item{...}{dynamic-dots Name-value pairs, passed on to tibble().
All values must have the same size of .data or size 1.}

\item{simplify}{simplify}

\item{y}{y}

\item{.data}{mass_data class}

\item{.before}{One-based column index or column name where to add
the new columns, default: after last column.}

\item{.after}{One-based column index or column name where to add
the new columns, default: after last column.}

\item{.name_repair}{Treatment of problematic column names:
"minimal": No name repair or checks, beyond basic existence,
"unique": Make sure names are unique and not empty,
"check_unique": (default value), no name repair, but check they are unique,
"universal": Make the names unique and syntactic
a function: apply custom name repair (e.g., .name_repair = make.names for
names in the style of base R).
A purrr-style anonymous function, see rlang::as_function()
This argument is passed on as repair to vctrs::vec_as_names().
See there for more details on these terms and the strategies
used to enforce them.}
}
\value{
A numeric.

A numeric.

A character vector.

A character vector.

A numeric (vector).

message

message

message

message

message

result

result

vector object

vector object

vector object

message

mass_dataset class
}
\description{
Number of samples

Number of variables

Sample IDs

Variable IDs

Get missing value number/percentage in expression data.

###old version
#' @title apply
#' @method apply mass_dataset
#' @param X X
#' @param MARGIN MARGIN
#' @param FUN FUN
#' @param ... ...
#' @param simplify simplify
#' @export
#' @rdname summary-mass_dataset
#' @return result

#' @title intersect
#' @method intersect mass_dataset
#' @param x x
#' @param y y
#' @export
#' @rdname summary-mass_dataset
#' @return result
}
\details{
apply.mass_dataset =
function(X, MARGIN, FUN, ..., simplify = TRUE){
apply(as.matrix(X@expression_data), MARGIN, FUN, ..., simplify = simplify)
}

intersect.mass_dataset = function(x, y){
intersect(x@sample_info$sample_id,
y@sample_info$sample_id)
}
}
\examples{
data("expression_data")
data("sample_info")
data("variable_info")
object =
  create_mass_dataset(
    expression_data = expression_data,
    sample_info = sample_info,
    variable_info = variable_info,
  )
 get_sample_number(object = object)
data("expression_data")
data("sample_info")
data("variable_info")
object =
  create_mass_dataset(
    expression_data = expression_data,
    sample_info = sample_info,
    variable_info = variable_info,
  )
 get_variable_number(object = object)
data("expression_data")
data("sample_info")
data("variable_info")
object =
  create_mass_dataset(
    expression_data = expression_data,
    sample_info = sample_info,
    variable_info = variable_info,
  )
 get_sample_id(object = object)
data("expression_data")
data("sample_info")
data("variable_info")
object =
  create_mass_dataset(
    expression_data = expression_data,
    sample_info = sample_info,
    variable_info = variable_info,
  )
 head(get_variable_id(object = object))
data("expression_data")
data("sample_info")
data("variable_info")
object =
  create_mass_dataset(
    expression_data = expression_data,
    sample_info = sample_info,
    variable_info = variable_info,
  )
object
head(get_variable_id(object = object))
get_mv_number(object)
get_mv_number(object, by = "sample")
head(get_mv_number(object, by = "variable", "percentage"))
}
\author{
Xiaotao Shen
\email{shenxt1990@outlook.com}
}
