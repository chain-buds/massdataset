% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/arithmetic-mass_dataset.R
\name{log.mass_dataset}
\alias{log.mass_dataset}
\alias{abs.mass_dataset}
\alias{sqrt.mass_dataset}
\alias{scale.mass_dataset}
\alias{+,mass_dataset,numeric-method}
\alias{-,mass_dataset,numeric-method}
\alias{*,mass_dataset,numeric-method}
\alias{/,mass_dataset,numeric-method}
\alias{>,mass_dataset,numeric-method}
\alias{>=,mass_dataset,numeric-method}
\alias{<,mass_dataset,numeric-method}
\alias{<=,mass_dataset,numeric-method}
\alias{==,mass_dataset,numeric-method}
\alias{colSums,mass_dataset-method}
\alias{rowSums,mass_dataset-method}
\alias{colMeans,mass_dataset-method}
\alias{rowMeans,mass_dataset-method}
\title{Log-transform Expression Data in \code{mass_dataset} Object}
\usage{
\method{log}{mass_dataset}(x, base = exp(1))

\method{abs}{mass_dataset}(x)

\method{sqrt}{mass_dataset}(x)

\method{scale}{mass_dataset}(x, center = TRUE, scale = TRUE)

\S4method{+}{mass_dataset,numeric}(e1, e2)

\S4method{-}{mass_dataset,numeric}(e1, e2)

\S4method{*}{mass_dataset,numeric}(e1, e2)

\S4method{/}{mass_dataset,numeric}(e1, e2)

\S4method{>}{mass_dataset,numeric}(e1, e2)

\S4method{>=}{mass_dataset,numeric}(e1, e2)

\S4method{<}{mass_dataset,numeric}(e1, e2)

\S4method{<=}{mass_dataset,numeric}(e1, e2)

\S4method{==}{mass_dataset,numeric}(e1, e2)

\S4method{colSums}{mass_dataset}(x, na.rm = FALSE, dims = 1)

\S4method{rowSums}{mass_dataset}(x, na.rm = FALSE, dims = 1)

\S4method{colMeans}{mass_dataset}(x, na.rm = FALSE, dims = 1)

\S4method{rowMeans}{mass_dataset}(x, na.rm = FALSE, dims = 1)
}
\arguments{
\item{x}{x}

\item{base}{The base of the logarithm. The default is \code{exp(1)},
which corresponds to the natural logarithm.}

\item{center}{center}

\item{scale}{scale}

\item{e1}{a mass_dataset class object}

\item{e2}{numeric}

\item{na.rm}{na.rm}

\item{dims}{dims}
}
\value{
Returns a \code{mass_dataset} object with log-transformed expression data.

Returns a \code{mass_dataset} object with expression data transformed to absolute values.

A \code{mass_dataset} object with updated \code{expression_data} and \code{process_info}.

mass_dataset object

mass_dataset object

mass_dataset object

mass_dataset object

mass_dataset object

A logical data.frame

A logical data.frame

A logical data.frame

A logical data.frame

A logical data.frame

result

vector object

vector object

vector object
}
\description{
This function applies a log transformation to the expression data
contained within a \code{mass_dataset} object.

This function applies an absolute value transformation to the expression data
contained within a \code{mass_dataset} object.

This function takes a \code{mass_dataset} object and applies the square root transformation
to the expression data stored in the object. It also updates the \code{process_info} attribute to log the transformation.
}
\details{
The \code{log.mass_dataset} function takes a \code{mass_dataset} object as its input,
and applies a log transformation to its expression data. This can be useful
for various downstream analyses that assume or benefit from log-transformed data.
The function also updates the \code{process_info} slot of the \code{mass_dataset}
object to include information about the log transformation.

The \code{abs.mass_dataset} function takes a \code{mass_dataset} object as its input
and applies an absolute value transformation to its expression data. This can
be useful in scenarios where negative values in the dataset need to be transformed
to their positive counterparts for subsequent analyses.

Additionally, the function updates the \code{process_info} slot of the \code{mass_dataset}
object to capture details about the absolute value transformation process.

\enumerate{
\item Extracts the \code{expression_data} from the \code{mass_dataset} object.
\item Applies the square root transformation to the \code{expression_data}.
\item Updates the \code{expression_data} in the \code{mass_dataset} object.
\item Logs the transformation in the \code{process_info} attribute, including the package name, function name, parameters, and time.
}
}
\examples{
# Assuming 'md' is a 'mass_dataset' object
# log_transformed_md <- log(md, base = 2)

# Assuming 'md' is a 'mass_dataset' object
# abs_transformed_md <- abs.mass_dataset(md)

\dontrun{
# Assuming 'dataset' is a mass_dataset object
transformed_dataset <- sqrt.mass_dataset(dataset)
}

}
\author{
Xiaotao Shen \email{shenxt1990@outlook.com}

Xiaotao Shen \href{mailto:shenxt1990@outlook.com}{shenxt1990@outlook.com}
}
